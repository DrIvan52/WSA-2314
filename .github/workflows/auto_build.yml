name: Auto Build (test)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ♻️
        uses: actions/checkout@v4

      - name: Setup Python 👷
        uses: actions/setup-python@v4
        with:
          check-latest: true
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: scripts/

      - name: Setup Python3 Virtual Enviroment 🐍
        working-directory: scripts
        run: |
          sudo apt-get update
          PYTHON_VENV_DIR="$(dirname "$PWD")/python3-env"
          python3 -m venv "$PYTHON_VENV_DIR" || abort "Failed to create python3 virtual env"
          # shellcheck disable=SC1091
          source "$PYTHON_VENV_DIR/bin/activate" || abort "Failed to activate python3 virtual env"
          python3 -c "import pkg_resources; pkg_resources.require(open('requirements.txt',mode='r'))" &>/dev/null || {
              echo "Installing Python3 dependencies"
              python3 -m pip install --upgrade -r requirements.txt || abort "Failed to install python3 dependencies"
          }
          deactivate

      - name: Install Ubuntu Dependencies 🧑‍🏭
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: e2fsprogs attr unzip qemu-utils python3-venv
          version: 1.0

      - name: Download Files
        id: download
        run: |
          WORK_DIR=$(mktemp -d -t wsa-build-XXXXXXXXXX_) || exit 1
          DOWNLOAD_DIR=../download
          DOWNLOAD_CONF_NAME=download.list
          WSA_WORK_ENV="${WORK_DIR:?}/ENV"
          touch "$WSA_WORK_ENV"
          export WSA_WORK_ENV
          abort() {
            [ "$1" ] && echo -e "ERROR: $1"
            echo "Build: an error has occurred, exit"
            exit 1
          }
          trap abort INT TERM
          pip install -r ./scripts/requirements.txt
          echo "Generate Download Links"
          cd ./scripts
          python3 generateWSALinks.py x64 WIF "$DOWNLOAD_DIR" "$DOWNLOAD_CONF_NAME"
          python3 generateWSALinks.py arm64 WIF "$DOWNLOAD_DIR" "$DOWNLOAD_CONF_NAME" --skip_download_wsa
          python3 generateMagiskLink.py stable "$DOWNLOAD_DIR" "$DOWNLOAD_CONF_NAME"
          python3 generateMagiskLink.py delta "$DOWNLOAD_DIR" "$DOWNLOAD_CONF_NAME"
          python3 generateGappsLink.py x64 "$DOWNLOAD_DIR" "$DOWNLOAD_CONF_NAME" MindTheGapps-x64-13.0.zip
          python3 generateGappsLink.py arm64 "$DOWNLOAD_DIR" "$DOWNLOAD_CONF_NAME" MindTheGapps-arm64-13.0.zip
          echo "Download Artifacts"
          if ! aria2c --no-conf --log-level=info --log="$DOWNLOAD_DIR/aria2_download.log" -x16 -s16 -j5 -c -R -m0 --async-dns=false --check-integrity=true --continue=true --allow-overwrite=true --conditional-get=true -d"$DOWNLOAD_DIR" -i"$DOWNLOAD_DIR/$DOWNLOAD_CONF_NAME"; then
            echo "We have encountered an error while downloading files."
            echo "download=false" >> $GITHUB_OUTPUT
          fi

      - name: Build WSA 🏗️
        if: steps.download.outputs.download != 'false'
        id: wsa-1
        run: |
          ./scripts/build.sh --offline --custom-model redfin --arch x64 --release-type WIF --gapps-brand none --root-sol none --magisk-ver stable --remove-amazon --compress-format zip
          echo "md5=$(md5sum output/WSA-*.zip | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "sha256=$(sha256sum output/WSA-*.zip | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: File Checksum ✔️
        id: hash-1
        if: steps.download.outputs.download != 'false'
        run: |
            filedir="${{ github.workspace }}/output/${{ steps.wsa-1.outputs.artifact }}"
            md5_hash=$(md5sum "$filedir" | cut -d ' ' -f 1)
            sha256_hash=$(sha256sum "$filedir" | cut -d ' ' -f 1)
            md5_hash_lower=$(echo "$md5_hash" | tr '[:upper:]' '[:lower:]')
            sha256_hash_lower=$(echo "$sha256_hash" | tr '[:upper:]' '[:lower:]')
            echo "MD5=$md5_hash_lower" >> $GITHUB_OUTPUT
            echo "SHA256=$sha256_hash_lower" >> $GITHUB_OUTPUT
            echo "${{ steps.wsa-1.outputs.artifact }}"
            echo "MD5=$md5_hash_lower"
            echo "SHA256=$sha256_hash_lower"

      - name: Upload Artifact 📦
        if: steps.download.outputs.download != 'false'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.wsa-1.outputs.artifact }}
          path: ${{ github.workspace }}/output/${{ steps.wsa-1.outputs.artifact }}

      - name: Build WSA 🏗️
        if: steps.download.outputs.download != 'false'
        id: wsa-2
        run: |
          ./scripts/build.sh --offline --custom-model redfin --arch x64 --release-type WIF --gapps-brand none --root-sol none --magisk-ver stable --compress-format zip
      
      - name: File Checksum ✔️
        id: hash-2
        if: steps.download.outputs.download != 'false'
        run: |
            filedir="${{ github.workspace }}/output/${{ steps.wsa-1.outputs.artifact }}"
            md5_hash=$(md5sum "$filedir" | cut -d ' ' -f 1)
            sha256_hash=$(sha256sum "$filedir" | cut -d ' ' -f 1)
            md5_hash_lower=$(echo "$md5_hash" | tr '[:upper:]' '[:lower:]')
            sha256_hash_lower=$(echo "$sha256_hash" | tr '[:upper:]' '[:lower:]')
            echo "MD5=$md5_hash_lower" >> $GITHUB_OUTPUT
            echo "SHA256=$sha256_hash_lower" >> $GITHUB_OUTPUT
            echo "${{ steps.wsa-1.outputs.artifact }}"
            echo "MD5=$md5_hash_lower"
            echo "SHA256=$sha256_hash_lower"
      
      - name: Upload Artifact 📦
        if: steps.download.outputs.download != 'false'
        uses: actions/upload-artifact@v3
        with:
            name: ${{ steps.wsa-2.outputs.artifact }}
            path: ${{ github.workspace }}/output/${{ steps.wsa-2.outputs.artifact }}

      - name: Update build to release 🤌
        if: steps.download.outputs.download != 'false'
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: |
            ${{ github.workspace }}/output/${{ steps.wsa-1.outputs.artifact }}
            ${{ github.workspace }}/output/${{ steps.wsa-2.outputs.artifact }}
          fail_on_unmatched_files: true
          append_body: true
          tag_name: ${{ steps.wsa-1.outputs.WSAVER }}
          body: |
            ## Hashes
            - ${{ steps.wsa-1.outputs.artifact }}
            ```yaml
            MD5: ${{ steps.hash-1.outputs.MD5 }}
            SHA256: ${{ steps.hash-1.outputs.SHA256 }}
            ```
            - ${{ steps.wsa-2.outputs.artifact }}
            ```yaml
            MD5: ${{ steps.hash-2.outputs.MD5 }}
            SHA256: ${{ steps.hash-2.outputs.SHA256 }}
            ```
          token: ${{ secrets.PAT }}
